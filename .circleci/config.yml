version: 2

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - fmt
      - clippy

jobs:
  build:
    docker:
      - image: rust:1.54.0
    environment:
      # https://github.com/rust-lang/cargo/issues/2078
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
    steps:
      - checkout
      - run: apt update -y
      - run: apt install -y gcc-arm-none-eabi libusb-1.0-0-dev cmake
      - run: rustup target add thumbv6m-none-eabi
      # Test common
      - run: cd common && cargo test --target x86_64-unknown-linux-gnu
      # Build firmware (ARM)
      - run: cd firmware && cargo build --release --bins --examples
      - run: cd firmware && cargo build --release --bins --examples --features dev
      # Test firmware (x86_64)
      - run: cd firmware && cargo test --target x86_64-unknown-linux-gnu --tests
      - run: cd firmware && cargo test --target x86_64-unknown-linux-gnu --tests --features dev
      # Test cli-utils (x86_64)
      - run: cd cli-utils && cargo test --target x86_64-unknown-linux-gnu

  clippy:
    docker:
      - image: rust:1.54.0
    steps:
      - checkout
      - run: apt update -y
      - run: apt install -y gcc-arm-none-eabi libusb-1.0-0-dev cmake
      - run: rustup component add clippy
      - run: rustup target add thumbv6m-none-eabi
      - run: cd firmware && cargo clippy --all-features -- -D warnings
      - run: cd common && cargo clippy -- -D warnings
      - run: cd cli-utils && cargo clippy --all-targets --all-features -- -D warnings

  fmt:
    docker:
      - image: rust:1.54.0
    steps:
      - checkout
      - run: rustup component add rustfmt
      - run: cd firmware && cargo fmt -- --check
      - run: cd common && cargo fmt -- --check
      - run: cd cli-utils && cargo fmt -- --check
